
syntax = "proto3";
package ploioproto;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

service PloioAPI {
    //rpc ListApplications (ApplicationGet) returns (ApplicationList) {}
    rpc GetApplication (ApplicationGet) returns (Application) {}
    rpc UpsertApplication (Application) returns (Application) {}
    //rpc ListClusters (ClusterGet) returns (ClusterList) {}
    //rpc ListPipelines (PipelineGet) returns (PipelineList) {}
    //rpc CreatePipeline (PipelineCreate) returns (Pipeline) {}
    //rpc RunPipeline (PipelineRun) returns (PipelineLog) {} 
  }

message ApplicationGet {
    string ID = 1;
}

message Application {
    string ID = 1 [(gogoproto.moretags) = "gorm:\"primary_key\""];
    string Name = 2;
    string Owner = 3;
    string Repo = 4;
    repeated Service Services = 5;
    repeated Env Env = 6;
    // repeated Pipeline Pipelines = 7;
}


message Service {
    string ID = 1 [(gogoproto.moretags) = "gorm:\"primary_key\""];
    string ApplicationID = 2;
    string Name = 3;
    string Type = 4;
    repeated Port Ports = 5;
}

// enum ServiceType {
//     ClusterIP = 0;
//     NodePort = 1;
//     LoadBalancer = 2;
//     ExternalName = 3;
// }

message Port {
    string ID = 1 [(gogoproto.moretags) = "gorm:\"primary_key\""];
    string ServiceID = 2;
    string Name = 3;
    string Protocol = 4;
    string Port = 5;
    string TargetPort = 6;
    string NodePort = 7;
}

message Env {
    string ID = 1 [(gogoproto.moretags) = "gorm:\"primary_key\""];
    string ApplicationID = 2;
    string Name = 3;
    string Type = 4;
    string Value = 5;
}