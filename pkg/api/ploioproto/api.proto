
syntax = "proto3";
package ploioproto;

import "github.com/gogo/protobuf/gogoproto/gogo.proto";

service PloioAPI {
    rpc Deploy (Deployment) returns (stream DeploymentStatus) {} 
}

// This isn't a kubernetes deployment. Is that too confusing? Call it something different?
// It will encompass every kubernetes resource needed to run this app, similar to a helm chart
message Deployment {
    Application Application = 1;
    DeploymentType Type = 2;
    SmokeHeader SmokeHeader = 10;
    int64 SmokeApprovalTimeout = 11;
}

message SmokeHeader {
    string Name = 1;
    string ValueRegex = 2;
}

enum DeploymentType {
   Smoke = 1;
   Canary = 2;
   Rolling = 3;
   BlueGreen = 4;
}

message DeploymentStatus{
    Deployment Deployment = 1;
    repeated Condition Conditions = 2; // This will contain all conditions for every resource (service, deployment, config-maps, etc)
                                       // If any of the resources fail to deploy, it will roll back the entire deployment
    string Message = 3; // Overall message update from ploio for the entire ploio deployment process
    bool Complete = 4; // If the deployment has finished (the final status message)
}

message Condition {
    string Resource = 1;
    string Type = 2;
    string Reason = 3;
    string Message = 4;
    int64 LastProbeTime = 5;
    int64 LastTransitionTime = 6;
}

message ApplicationID {
    string ID = 1;
}

message Application {
    string ID = 1 [(gogoproto.moretags) = "gorm:\"primary_key\""];
    string Name = 2;
    string Owner = 3;
    string ContainerRepo = 4;
    string GitHubRepo = 5;
    repeated Service Services = 6;
    repeated Env Env = 7;
}


message Service {
    string ID = 1 [(gogoproto.moretags) = "gorm:\"primary_key\""];
    string ApplicationID = 2;
    string Name = 3;
    string Type = 4;
    repeated Port Ports = 5;
}

// enum ServiceType {
//     ClusterIP = 0;
//     NodePort = 1;
//     LoadBalancer = 2;
//     ExternalName = 3;
// }

message Port {
    string ID = 1 [(gogoproto.moretags) = "gorm:\"primary_key\""];
    string ServiceID = 2;
    string Name = 3;
    string Protocol = 4;
    string Port = 5;
    string TargetPort = 6;
    string NodePort = 7;
}

message Env {
    string ID = 1 [(gogoproto.moretags) = "gorm:\"primary_key\""];
    string ApplicationID = 2;
    string Name = 3;
    string Type = 4;
    string Value = 5;
}