// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

/*
Package ploioproto is a generated protocol buffer package.

It is generated from these files:
	api.proto

It has these top-level messages:
	ApplicationCreate
	ApplicationGet
	ApplicationList
	Application
	Pipeline
	Step
	EnvVar
	Volume
*/
package ploioproto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type StepType int32

const (
	StepType_Deploy            StepType = 0
	StepType_DeployBlueGreen   StepType = 1
	StepType_DeployCanary      StepType = 2
	StepType_DeployManualCheck StepType = 3
	StepType_ManualCheck       StepType = 4
)

var StepType_name = map[int32]string{
	0: "Deploy",
	1: "DeployBlueGreen",
	2: "DeployCanary",
	3: "DeployManualCheck",
	4: "ManualCheck",
}
var StepType_value = map[string]int32{
	"Deploy":            0,
	"DeployBlueGreen":   1,
	"DeployCanary":      2,
	"DeployManualCheck": 3,
	"ManualCheck":       4,
}

func (x StepType) String() string {
	return proto.EnumName(StepType_name, int32(x))
}
func (StepType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type EnvVarType int32

const (
	EnvVarType_ConfigMap EnvVarType = 0
)

var EnvVarType_name = map[int32]string{
	0: "ConfigMap",
}
var EnvVarType_value = map[string]int32{
	"ConfigMap": 0,
}

func (x EnvVarType) String() string {
	return proto.EnumName(EnvVarType_name, int32(x))
}
func (EnvVarType) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

type ApplicationCreate struct {
	Name     string `protobuf:"bytes,1,opt,name=Name" json:"Name,omitempty"`
	Owner    string `protobuf:"bytes,2,opt,name=Owner" json:"Owner,omitempty"`
	Repo     string `protobuf:"bytes,3,opt,name=Repo" json:"Repo,omitempty"`
	Stateful bool   `protobuf:"varint,4,opt,name=Stateful" json:"Stateful,omitempty"`
}

func (m *ApplicationCreate) Reset()                    { *m = ApplicationCreate{} }
func (m *ApplicationCreate) String() string            { return proto.CompactTextString(m) }
func (*ApplicationCreate) ProtoMessage()               {}
func (*ApplicationCreate) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ApplicationCreate) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ApplicationCreate) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *ApplicationCreate) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *ApplicationCreate) GetStateful() bool {
	if m != nil {
		return m.Stateful
	}
	return false
}

type ApplicationGet struct {
	ID   string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
}

func (m *ApplicationGet) Reset()                    { *m = ApplicationGet{} }
func (m *ApplicationGet) String() string            { return proto.CompactTextString(m) }
func (*ApplicationGet) ProtoMessage()               {}
func (*ApplicationGet) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ApplicationGet) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *ApplicationGet) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ApplicationList struct {
	Applications []*Application `protobuf:"bytes,1,rep,name=Applications" json:"Applications,omitempty"`
}

func (m *ApplicationList) Reset()                    { *m = ApplicationList{} }
func (m *ApplicationList) String() string            { return proto.CompactTextString(m) }
func (*ApplicationList) ProtoMessage()               {}
func (*ApplicationList) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *ApplicationList) GetApplications() []*Application {
	if m != nil {
		return m.Applications
	}
	return nil
}

type Application struct {
	ID        string      `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Name      string      `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Owner     string      `protobuf:"bytes,3,opt,name=Owner" json:"Owner,omitempty"`
	Repo      string      `protobuf:"bytes,4,opt,name=Repo" json:"Repo,omitempty"`
	Stateful  bool        `protobuf:"varint,5,opt,name=Stateful" json:"Stateful,omitempty"`
	Pipelines []*Pipeline `protobuf:"bytes,6,rep,name=Pipelines" json:"Pipelines,omitempty"`
	EvnVars   []*EnvVar   `protobuf:"bytes,7,rep,name=EvnVars" json:"EvnVars,omitempty"`
	Volumes   []*Volume   `protobuf:"bytes,8,rep,name=Volumes" json:"Volumes,omitempty"`
}

func (m *Application) Reset()                    { *m = Application{} }
func (m *Application) String() string            { return proto.CompactTextString(m) }
func (*Application) ProtoMessage()               {}
func (*Application) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *Application) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Application) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Application) GetOwner() string {
	if m != nil {
		return m.Owner
	}
	return ""
}

func (m *Application) GetRepo() string {
	if m != nil {
		return m.Repo
	}
	return ""
}

func (m *Application) GetStateful() bool {
	if m != nil {
		return m.Stateful
	}
	return false
}

func (m *Application) GetPipelines() []*Pipeline {
	if m != nil {
		return m.Pipelines
	}
	return nil
}

func (m *Application) GetEvnVars() []*EnvVar {
	if m != nil {
		return m.EvnVars
	}
	return nil
}

func (m *Application) GetVolumes() []*Volume {
	if m != nil {
		return m.Volumes
	}
	return nil
}

type Pipeline struct {
	ID         string  `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Name       string  `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	PipelineID string  `protobuf:"bytes,3,opt,name=PipelineID" json:"PipelineID,omitempty"`
	Order      int32   `protobuf:"varint,4,opt,name=Order" json:"Order,omitempty"`
	Steps      []*Step `protobuf:"bytes,5,rep,name=Steps" json:"Steps,omitempty"`
}

func (m *Pipeline) Reset()                    { *m = Pipeline{} }
func (m *Pipeline) String() string            { return proto.CompactTextString(m) }
func (*Pipeline) ProtoMessage()               {}
func (*Pipeline) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func (m *Pipeline) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Pipeline) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Pipeline) GetPipelineID() string {
	if m != nil {
		return m.PipelineID
	}
	return ""
}

func (m *Pipeline) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

func (m *Pipeline) GetSteps() []*Step {
	if m != nil {
		return m.Steps
	}
	return nil
}

type Step struct {
	ID         string   `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Name       string   `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	PipelineID string   `protobuf:"bytes,3,opt,name=PipelineID" json:"PipelineID,omitempty"`
	Type       StepType `protobuf:"varint,4,opt,name=Type,enum=ploioproto.StepType" json:"Type,omitempty"`
	Order      int32    `protobuf:"varint,5,opt,name=Order" json:"Order,omitempty"`
}

func (m *Step) Reset()                    { *m = Step{} }
func (m *Step) String() string            { return proto.CompactTextString(m) }
func (*Step) ProtoMessage()               {}
func (*Step) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{5} }

func (m *Step) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Step) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Step) GetPipelineID() string {
	if m != nil {
		return m.PipelineID
	}
	return ""
}

func (m *Step) GetType() StepType {
	if m != nil {
		return m.Type
	}
	return StepType_Deploy
}

func (m *Step) GetOrder() int32 {
	if m != nil {
		return m.Order
	}
	return 0
}

type EnvVar struct {
	ID        string     `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Name      string     `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
	Type      EnvVarType `protobuf:"varint,3,opt,name=Type,enum=ploioproto.EnvVarType" json:"Type,omitempty"`
	Key       string     `protobuf:"bytes,4,opt,name=Key" json:"Key,omitempty"`
	Value     string     `protobuf:"bytes,5,opt,name=Value" json:"Value,omitempty"`
	ConfigMap string     `protobuf:"bytes,6,opt,name=ConfigMap" json:"ConfigMap,omitempty"`
}

func (m *EnvVar) Reset()                    { *m = EnvVar{} }
func (m *EnvVar) String() string            { return proto.CompactTextString(m) }
func (*EnvVar) ProtoMessage()               {}
func (*EnvVar) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{6} }

func (m *EnvVar) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *EnvVar) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *EnvVar) GetType() EnvVarType {
	if m != nil {
		return m.Type
	}
	return EnvVarType_ConfigMap
}

func (m *EnvVar) GetKey() string {
	if m != nil {
		return m.Key
	}
	return ""
}

func (m *EnvVar) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func (m *EnvVar) GetConfigMap() string {
	if m != nil {
		return m.ConfigMap
	}
	return ""
}

type Volume struct {
	ID   string `protobuf:"bytes,1,opt,name=ID" json:"ID,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=Name" json:"Name,omitempty"`
}

func (m *Volume) Reset()                    { *m = Volume{} }
func (m *Volume) String() string            { return proto.CompactTextString(m) }
func (*Volume) ProtoMessage()               {}
func (*Volume) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{7} }

func (m *Volume) GetID() string {
	if m != nil {
		return m.ID
	}
	return ""
}

func (m *Volume) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func init() {
	proto.RegisterType((*ApplicationCreate)(nil), "ploioproto.ApplicationCreate")
	proto.RegisterType((*ApplicationGet)(nil), "ploioproto.ApplicationGet")
	proto.RegisterType((*ApplicationList)(nil), "ploioproto.ApplicationList")
	proto.RegisterType((*Application)(nil), "ploioproto.Application")
	proto.RegisterType((*Pipeline)(nil), "ploioproto.Pipeline")
	proto.RegisterType((*Step)(nil), "ploioproto.Step")
	proto.RegisterType((*EnvVar)(nil), "ploioproto.EnvVar")
	proto.RegisterType((*Volume)(nil), "ploioproto.Volume")
	proto.RegisterEnum("ploioproto.StepType", StepType_name, StepType_value)
	proto.RegisterEnum("ploioproto.EnvVarType", EnvVarType_name, EnvVarType_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for PloioAPI service

type PloioAPIClient interface {
	ListApplications(ctx context.Context, in *ApplicationGet, opts ...grpc.CallOption) (*ApplicationList, error)
	GetApplication(ctx context.Context, in *ApplicationGet, opts ...grpc.CallOption) (*Application, error)
	CreateApplication(ctx context.Context, in *ApplicationCreate, opts ...grpc.CallOption) (*Application, error)
}

type ploioAPIClient struct {
	cc *grpc.ClientConn
}

func NewPloioAPIClient(cc *grpc.ClientConn) PloioAPIClient {
	return &ploioAPIClient{cc}
}

func (c *ploioAPIClient) ListApplications(ctx context.Context, in *ApplicationGet, opts ...grpc.CallOption) (*ApplicationList, error) {
	out := new(ApplicationList)
	err := grpc.Invoke(ctx, "/ploioproto.PloioAPI/ListApplications", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ploioAPIClient) GetApplication(ctx context.Context, in *ApplicationGet, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := grpc.Invoke(ctx, "/ploioproto.PloioAPI/GetApplication", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *ploioAPIClient) CreateApplication(ctx context.Context, in *ApplicationCreate, opts ...grpc.CallOption) (*Application, error) {
	out := new(Application)
	err := grpc.Invoke(ctx, "/ploioproto.PloioAPI/CreateApplication", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for PloioAPI service

type PloioAPIServer interface {
	ListApplications(context.Context, *ApplicationGet) (*ApplicationList, error)
	GetApplication(context.Context, *ApplicationGet) (*Application, error)
	CreateApplication(context.Context, *ApplicationCreate) (*Application, error)
}

func RegisterPloioAPIServer(s *grpc.Server, srv PloioAPIServer) {
	s.RegisterService(&_PloioAPI_serviceDesc, srv)
}

func _PloioAPI_ListApplications_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationGet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PloioAPIServer).ListApplications(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ploioproto.PloioAPI/ListApplications",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PloioAPIServer).ListApplications(ctx, req.(*ApplicationGet))
	}
	return interceptor(ctx, in, info, handler)
}

func _PloioAPI_GetApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationGet)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PloioAPIServer).GetApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ploioproto.PloioAPI/GetApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PloioAPIServer).GetApplication(ctx, req.(*ApplicationGet))
	}
	return interceptor(ctx, in, info, handler)
}

func _PloioAPI_CreateApplication_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ApplicationCreate)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PloioAPIServer).CreateApplication(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/ploioproto.PloioAPI/CreateApplication",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PloioAPIServer).CreateApplication(ctx, req.(*ApplicationCreate))
	}
	return interceptor(ctx, in, info, handler)
}

var _PloioAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "ploioproto.PloioAPI",
	HandlerType: (*PloioAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ListApplications",
			Handler:    _PloioAPI_ListApplications_Handler,
		},
		{
			MethodName: "GetApplication",
			Handler:    _PloioAPI_GetApplication_Handler,
		},
		{
			MethodName: "CreateApplication",
			Handler:    _PloioAPI_CreateApplication_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}

func init() { proto.RegisterFile("api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 557 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x54, 0xcf, 0x6e, 0xd3, 0x4e,
	0x10, 0x8e, 0xff, 0x36, 0x99, 0xf6, 0x97, 0x38, 0xf3, 0x2b, 0x60, 0xa5, 0x80, 0x22, 0x1f, 0x50,
	0x14, 0x55, 0x39, 0x04, 0x6e, 0x9c, 0x4a, 0x52, 0x45, 0x11, 0xa4, 0x54, 0x5b, 0x94, 0xfb, 0x52,
	0xa6, 0x60, 0xe1, 0xd8, 0x2b, 0xdb, 0x29, 0xca, 0x13, 0x20, 0x21, 0x9e, 0x81, 0x77, 0xe4, 0x0d,
	0xd0, 0xee, 0x26, 0xf5, 0x46, 0x25, 0x55, 0x0e, 0xdc, 0x66, 0xbe, 0xf9, 0x76, 0xbe, 0x6f, 0xc6,
	0xbb, 0x86, 0x06, 0x17, 0xf1, 0x40, 0xe4, 0x59, 0x99, 0x21, 0x88, 0x24, 0x8b, 0x33, 0x15, 0x47,
	0x0b, 0x68, 0x9f, 0x09, 0x91, 0xc4, 0xd7, 0xbc, 0x8c, 0xb3, 0x74, 0x94, 0x13, 0x2f, 0x09, 0x11,
	0xdc, 0x0b, 0xbe, 0xa0, 0xd0, 0xea, 0x5a, 0xbd, 0x06, 0x53, 0x31, 0x1e, 0x83, 0xf7, 0xfe, 0x5b,
	0x4a, 0x79, 0x68, 0x2b, 0x50, 0x27, 0x92, 0xc9, 0x48, 0x64, 0xa1, 0xa3, 0x99, 0x32, 0xc6, 0x0e,
	0xd4, 0xaf, 0x4a, 0x5e, 0xd2, 0xcd, 0x32, 0x09, 0xdd, 0xae, 0xd5, 0xab, 0xb3, 0xbb, 0x3c, 0x7a,
	0x05, 0x4d, 0x43, 0x6e, 0x42, 0x25, 0x36, 0xc1, 0x9e, 0x8e, 0xd7, 0x4a, 0xf6, 0x74, 0x7c, 0xa7,
	0x6d, 0x57, 0xda, 0xd1, 0x05, 0xb4, 0x8c, 0x53, 0xef, 0xe2, 0xa2, 0xc4, 0xd7, 0x70, 0x64, 0x40,
	0x45, 0x68, 0x75, 0x9d, 0xde, 0xe1, 0xf0, 0xc9, 0xa0, 0x1a, 0x6d, 0x60, 0xd4, 0xd9, 0x16, 0x39,
	0xfa, 0x6e, 0xc3, 0xa1, 0x01, 0xec, 0xe3, 0xa1, 0x9a, 0xdf, 0xf9, 0xdb, 0xfc, 0xee, 0x8e, 0xf9,
	0xbd, 0xed, 0xf9, 0x71, 0x08, 0x8d, 0xcb, 0x58, 0x50, 0x12, 0xa7, 0x54, 0x84, 0xbe, 0xf2, 0x7c,
	0x6c, 0x7a, 0xde, 0x14, 0x59, 0x45, 0xc3, 0x53, 0x38, 0x38, 0xbf, 0x4d, 0xe7, 0x3c, 0x2f, 0xc2,
	0x03, 0x75, 0x02, 0xcd, 0x13, 0xe7, 0xe9, 0xed, 0x9c, 0xe7, 0x6c, 0x43, 0x91, 0xec, 0x79, 0x96,
	0x2c, 0x17, 0x54, 0x84, 0xf5, 0xfb, 0x6c, 0x5d, 0x62, 0x1b, 0x4a, 0xf4, 0xd3, 0x82, 0xfa, 0x46,
	0x69, 0xaf, 0x35, 0x3c, 0x07, 0xd8, 0xf0, 0xa7, 0xe3, 0xf5, 0x2e, 0x0c, 0x44, 0xad, 0x29, 0xff,
	0x44, 0xb9, 0xda, 0x88, 0xc7, 0x74, 0x82, 0x2f, 0xc0, 0xbb, 0x2a, 0x49, 0x14, 0xa1, 0xa7, 0x2c,
	0x05, 0xa6, 0x25, 0x59, 0x60, 0xba, 0x1c, 0xfd, 0xb0, 0xc0, 0x95, 0xd1, 0x3f, 0xb1, 0xd2, 0x03,
	0xf7, 0xc3, 0x4a, 0x90, 0x72, 0xd2, 0xdc, 0x5e, 0xb3, 0xd4, 0x90, 0x35, 0xa6, 0x18, 0x95, 0x69,
	0xcf, 0x30, 0x1d, 0xfd, 0xb2, 0xc0, 0xd7, 0xdb, 0xdd, 0xcb, 0x4e, 0x7f, 0x2d, 0xe7, 0x28, 0xb9,
	0xc7, 0xf7, 0xbf, 0x91, 0x21, 0x18, 0x80, 0xf3, 0x96, 0x56, 0xeb, 0x5b, 0x23, 0x43, 0x69, 0x61,
	0xce, 0x93, 0x25, 0x29, 0x0b, 0x0d, 0xa6, 0x13, 0x7c, 0x0a, 0x8d, 0x51, 0x96, 0xde, 0xc4, 0x9f,
	0x67, 0x5c, 0x84, 0xbe, 0xaa, 0x54, 0x40, 0x74, 0x0a, 0xbe, 0xfe, 0x8e, 0xfb, 0xf8, 0xeb, 0x93,
	0xbc, 0x96, 0x7a, 0x6c, 0x04, 0xf0, 0xc7, 0x24, 0x92, 0x6c, 0x15, 0xd4, 0xf0, 0x7f, 0x68, 0xe9,
	0xf8, 0x4d, 0xb2, 0xa4, 0x49, 0x4e, 0x94, 0x06, 0x16, 0x06, 0x70, 0xa4, 0xc1, 0x11, 0x4f, 0x79,
	0xbe, 0x0a, 0x6c, 0x7c, 0x04, 0x6d, 0x8d, 0xcc, 0x78, 0xba, 0xe4, 0xc9, 0xe8, 0x0b, 0x5d, 0x7f,
	0x0d, 0x1c, 0x6c, 0xc1, 0xa1, 0x09, 0xb8, 0xfd, 0x13, 0x80, 0x6a, 0x5c, 0xfc, 0xcf, 0x18, 0x20,
	0xa8, 0x0d, 0x7f, 0xcb, 0xeb, 0x26, 0xf7, 0x72, 0x76, 0x39, 0xc5, 0x19, 0x04, 0xf2, 0x29, 0x9b,
	0x2f, 0x13, 0x3b, 0x3b, 0x1e, 0xf0, 0x84, 0xca, 0xce, 0xc9, 0x8e, 0x9a, 0x6c, 0x12, 0xd5, 0x70,
	0x02, 0xcd, 0x09, 0x99, 0xdd, 0x1e, 0x6c, 0xb6, 0xeb, 0x4f, 0x11, 0xd5, 0x70, 0x06, 0x6d, 0xfd,
	0x1f, 0x34, 0x7b, 0x3d, 0xdb, 0xc1, 0xd7, 0xcc, 0x07, 0xda, 0x7d, 0xf4, 0x15, 0xf8, 0xf2, 0x4f,
	0x00, 0x00, 0x00, 0xff, 0xff, 0xd7, 0xad, 0x15, 0xc9, 0x81, 0x05, 0x00, 0x00,
}
